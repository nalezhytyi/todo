{"version":3,"sources":["components/ThemeSwitch.jsx","reducer.js","context.js","components/FormInput.jsx","components/TodoItem.jsx","components/TodoList.jsx","components/Footer.jsx","helpers/declareOfNumber.js","components/LanguageSwitch.jsx","App.js","serviceWorker.js","i18n.js","index.js"],"names":["initialTheme","localStorage","getItem","JSON","parse","ThemeSwitch","useState","darkMode","setDarkMode","t","useTranslation","useEffect","setItem","stringify","document","querySelector","setAttribute","removeAttribute","className","type","checked","onChange","reducer","state","action","id","Date","now","title","payload","completed","map","todo","filter","Context","createContext","initialState","ContextProvider","children","useReducer","dispatch","Provider","value","FormInput","todoTitle","setTodoTitle","useContext","addTodo","minLength","maxLength","e","target","onKeyPress","key","htmlFor","data-success","onClick","TodoItem","edit","setEdit","editedTodo","setEditedTodo","saveTodo","autoFocus","onBlur","href","TodoList","todos","reverse","direction","triggerOnce","Footer","checkAll","setCheckAll","unfinishedTodos","problem","problems","probleme","length","n","text_forms","n1","Math","abs","declOfNum","disabled","initialLanguage","LanguageSwitch","language","setLanguage","i18n","onLanguageHandle","newLang","changeLanguage","name","App","Boolean","window","location","hostname","match","use","XHR","LanguageDetector","initReactI18next","init","resources","en","languageEN","de","languageDE","ru","languageRU","fallbackLng","ns","defaultNS","keySeparator","interpolation","escapeValue","formatSeparator","react","wait","useSuspense","bindI18n","bindStore","nsMode","ReactDOM","render","I18nextProvider","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.363fb034.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\n\nexport const initialTheme =\n  localStorage.getItem('darkMode') == null ? false : JSON.parse(localStorage.getItem('darkMode'));\n\nconst ThemeSwitch = () => {\n  const [darkMode, setDarkMode] = useState(initialTheme);\n\n  const { t } = useTranslation();\n\n  useEffect(() => {\n    localStorage.setItem('darkMode', JSON.stringify(darkMode));\n    darkMode\n      ? document.querySelector('html').setAttribute('data-theme', 'dark')\n      : document.querySelector('html').removeAttribute('data-theme');\n  }, [darkMode]);\n\n  return (\n    <div className='switch'>\n      <label>\n        <input type='checkbox' checked={darkMode} onChange={() => setDarkMode(!darkMode)} />\n        <span className='lever' />\n        {darkMode ? `${t('theme.light')}` : `${t('theme.dark')}`}\n      </label>\n    </div>\n  );\n};\n\nexport default ThemeSwitch;\n","export default function reducer(state, action) {\n  switch (action.type) {\n    case 'add':\n      return [\n        ...state,\n        {\n          id: Date.now(),\n          title: action.payload,\n          completed: false,\n        },\n      ];\n\n    case 'toggle':\n      return state.map((todo) => {\n        if (todo.id === action.payload) {\n          todo.completed = !todo.completed;\n        }\n        return todo;\n      });\n\n    case 'toggleAll':\n      return state.map((todo) => {\n        todo.completed = !action.payload;\n        return todo;\n      });\n\n    case 'edit':\n      return state.map((todo) => {\n        if (todo.id === action.todo.id) {\n          todo.title = action.payload;\n          todo.completed = false;\n          return todo;\n        }\n        return todo;\n      });\n\n    case 'remove':\n      return state.filter((todo) => todo.id !== action.payload);\n\n    case 'removeCompletedTodo':\n      return state.filter((todo) => todo.completed === false);\n\n    default:\n      return state;\n  }\n}\n","import React, { createContext, useEffect, useReducer } from 'react';\nimport reducer from './reducer';\n\nexport const Context = createContext();\n\nconst initialState =\n  localStorage.getItem('todos') == null\n    ? [\n        {\n          id: 1,\n          title: 'Добавить себе ещё проблем',\n          completed: false,\n        },\n      ]\n    : JSON.parse(localStorage.getItem('todos'));\n\nexport const ContextProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  useEffect(() => {\n    localStorage.setItem('todos', JSON.stringify(state));\n  }, [state]);\n\n  return <Context.Provider value={{ state, dispatch }}>{children}</Context.Provider>;\n};\n","import React, { useContext, useState } from 'react';\nimport { Context } from '../context';\nimport { useTranslation } from 'react-i18next';\n\nconst FormInput = () => {\n  const [todoTitle, setTodoTitle] = useState('');\n\n  const { t } = useTranslation();\n  const { dispatch } = useContext(Context);\n\n  const addTodo = () => {\n    if (todoTitle) {\n      dispatch({\n        type: 'add',\n        payload: todoTitle,\n      });\n      setTodoTitle('');\n    }\n  };\n\n  return (\n    <div className='form-input'>\n      <div className='input-field'>\n        <input\n          id='adding'\n          className='validate'\n          type='text'\n          value={todoTitle}\n          minLength='1'\n          maxLength='350'\n          onChange={(e) => setTodoTitle(e.target.value)}\n          onKeyPress={(e) => (e.key === 'Enter' ? addTodo() : null)}\n        />\n        <label htmlFor='adding'>{t('formInput.label')}</label>\n        <span className='helper-text' data-success={t('formInput.addMore')} />\n      </div>\n      <div className='icons-group'>\n        <button className='btn-floating btn-large waves-effect' onClick={addTodo}>\n          <i className='material-icons'>add</i>\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default FormInput;\n","import React, { useState } from 'react';\n\nconst TodoItem = ({ todo, dispatch }) => {\n  const [edit, setEdit] = useState(false);\n  const [editedTodo, setEditedTodo] = useState(todo.title);\n\n  const saveTodo = () => {\n    setEdit(false);\n    if (editedTodo) {\n      dispatch({\n        type: 'edit',\n        payload: editedTodo,\n        todo,\n      });\n    } else {\n      dispatch({ type: 'remove', payload: todo.id });\n    }\n  };\n\n  const saveHandler = (e) => {\n    if (e.key === 'Enter' && e.target.value) {\n      saveTodo();\n    }\n  };\n\n  if (!edit) {\n    return (\n      <li className='todo'>\n        <label>\n          <input\n            type='checkbox'\n            checked={todo.completed}\n            onChange={() => dispatch({ type: 'toggle', payload: todo.id })}\n          />\n          <span className={todo.completed ? 'completed' : ''}>{todo.title}</span>\n        </label>\n        <div className='icons-group'>\n          <a href={'#edit'} onClick={() => setEdit(true)}>\n            <i className='material-icons'>edit</i>\n          </a>\n          <i\n            className='material-icons red-text'\n            onClick={() => dispatch({ type: 'remove', payload: todo.id })}\n          >\n            delete\n          </i>\n        </div>\n      </li>\n    );\n  } else {\n    return (\n      <li className='todo editable'>\n        <label>\n          <input\n            autoFocus\n            id='edit'\n            className='validate'\n            type='text'\n            value={editedTodo}\n            minLength='1'\n            maxLength='350'\n            onChange={(e) => setEditedTodo(e.target.value)}\n            onKeyPress={saveHandler}\n            onBlur={saveTodo}\n          />\n        </label>\n        <div className='icons-group'>\n          <i className='material-icons edit-icon' onClick={saveTodo}>\n            {editedTodo ? 'save' : 'delete'}\n          </i>\n        </div>\n      </li>\n    );\n  }\n};\n\nexport default TodoItem;\n","import React, { useContext } from 'react';\nimport TodoItem from './TodoItem';\nimport { Slide } from 'react-awesome-reveal';\nimport { Context } from '../context';\n\nconst TodoList = () => {\n  const { state: todos, dispatch } = useContext(Context);\n\n  return (\n    <ul className='todo-list'>\n      {[...todos].reverse().map((todo) => (\n        <Slide direction='down' triggerOnce key={todo.id}>\n          <TodoItem todo={todo} dispatch={dispatch} />\n        </Slide>\n      ))}\n    </ul>\n  );\n};\n\nexport default TodoList;\n","import React, { useContext, useState } from 'react';\nimport { Context } from '../context';\nimport { declOfNum } from '../helpers/declareOfNumber';\nimport { useTranslation } from 'react-i18next';\n\nconst Footer = () => {\n  const [checkAll, setCheckAll] = useState(false);\n  const { state: todos, dispatch } = useContext(Context);\n\n  const unfinishedTodos = todos.filter((todo) => todo.completed === false);\n\n  const { t } = useTranslation();\n\n  const handleChangeAll = () => {\n    dispatch({\n      type: 'toggleAll',\n      payload: checkAll,\n    });\n    setCheckAll(!checkAll);\n  };\n\n  const deleteTodos = () => {\n    if (unfinishedTodos) {\n      dispatch({ type: 'removeCompletedTodo' });\n      setCheckAll(false);\n    }\n  };\n\n  let problem = `${t('footer.problem')}`;\n  let problems = `${t('footer.problems')}`;\n  let probleme = `${t('footer.probleme')}`;\n\n  return (\n    <div className='footer-wrapper'>\n      {todos.length === 0 ? (\n        <h6>{t('footer.empty')}</h6>\n      ) : (\n        <div className='row'>\n          <label className='col s6 m4 l3'>\n            <input className='filled-in' type='checkbox' onChange={handleChangeAll} />\n            <span>{t('footer.checkAll')}</span>\n          </label>\n          <p className='col s6 m4 l6 center'>\n            {`${unfinishedTodos.length} ${declOfNum(unfinishedTodos.length, [\n              problem,\n              problems,\n              probleme,\n            ])}`}\n          </p>\n          <button\n            disabled={unfinishedTodos.length >= todos.length}\n            className='waves-effect waves-light btn-small col s12 m4 l3'\n            onClick={deleteTodos}\n          >\n            {t('footer.delete')}\n          </button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Footer;\n","export const declOfNum = (n, text_forms) => {\n  n = Math.abs(n) % 100;\n  const n1 = n % 10;\n  if (n > 10 && n < 20) {\n    return text_forms[2];\n  }\n  if (n1 > 1 && n1 < 5) {\n    return text_forms[1];\n  }\n  if (n1 === 1) {\n    return text_forms[0];\n  }\n  return text_forms[2];\n};\n","import React, { useEffect, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\n\nexport const initialLanguage =\n  localStorage.getItem('language') == null ? 'ru' : JSON.parse(localStorage.getItem('language'));\n\nconst LanguageSwitch = () => {\n  const [language, setLanguage] = useState(initialLanguage);\n  const { i18n } = useTranslation();\n\n  useEffect(() => {\n    localStorage.setItem('language', JSON.stringify(language));\n  }, [language, i18n]);\n\n  const onLanguageHandle = (e) => {\n    let newLang = e.target.value;\n    setLanguage(newLang);\n    i18n.changeLanguage(newLang);\n  };\n\n  return (\n    <div>\n      <p>\n        <label>\n          <input\n            value='en'\n            checked={language === 'en'}\n            className='with-gap'\n            name='language'\n            type='radio'\n            onChange={(e) => onLanguageHandle(e)}\n          />\n          <span>English</span>\n        </label>\n      </p>\n      <p>\n        <label>\n          <input\n            value='ru'\n            checked={language === 'ru'}\n            className='with-gap'\n            name='language'\n            type='radio'\n            onChange={(e) => onLanguageHandle(e)}\n          />\n          <span>Русский</span>\n        </label>\n      </p>\n      <p>\n        <label>\n          <input\n            value='de'\n            checked={language === 'de'}\n            className='with-gap'\n            name='language'\n            type='radio'\n            onChange={(e) => onLanguageHandle(e)}\n          />\n          <span>Deutsch</span>\n        </label>\n      </p>\n    </div>\n  );\n};\n\nexport default LanguageSwitch;\n","import React from 'react';\nimport ThemeSwitch from './components/ThemeSwitch';\nimport FormInput from './components/FormInput';\nimport TodoList from './components/TodoList';\nimport Footer from './components/Footer';\nimport { ContextProvider } from './context';\nimport { useTranslation } from 'react-i18next';\nimport LanguageSwitch from './components/LanguageSwitch';\n\nconst App = () => {\n  const { t } = useTranslation();\n\n  return (\n    <div className='container'>\n      <h1 className='title'>{t('title')}</h1>\n      <ThemeSwitch />\n      <LanguageSwitch />\n      <ContextProvider>\n        <FormInput />\n        <TodoList />\n        <Footer />\n      </ContextProvider>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import i18n from 'i18next';\nimport LanguageDetector from 'i18next-browser-languagedetector';\nimport { initReactI18next } from 'react-i18next';\nimport XHR from 'i18next-xhr-backend';\nimport languageEN from './locate/en/translate.json';\nimport languageDE from './locate/de/translate.json';\nimport languageRU from './locate/ru/translate.json';\n\ni18n\n  .use(XHR)\n  .use(LanguageDetector)\n  .use(initReactI18next)\n  .init({\n    resources: {\n      en: languageEN,\n      de: languageDE,\n      ru: languageRU,\n    },\n    /* default language when load the website in browser */\n    /* When react i18next not finding any language to as default in borwser */\n    fallbackLng: 'ru',\n    /* debugger For Development environment */\n    ns: ['translations'],\n    defaultNS: 'translations',\n    keySeparator: '.',\n    interpolation: {\n      escapeValue: false,\n      formatSeparator: ',',\n    },\n    react: {\n      wait: true,\n      useSuspense: false,\n      bindI18n: 'languageChanged loaded',\n      bindStore: 'added removed',\n      nsMode: 'default',\n    },\n  });\n\nexport default i18n;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'materialize-css';\nimport * as serviceWorker from './serviceWorker';\n\nimport i18n from './i18n';\nimport { I18nextProvider } from 'react-i18next';\n\nReactDOM.render(\n  <I18nextProvider i18n={i18n}>\n    <App />\n  </I18nextProvider>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}